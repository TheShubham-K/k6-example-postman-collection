// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import URI from "./libs/urijs.js";
import { group } from "k6";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    BASE_URL: "https://test-api.k6.io/"
  },
  environment: {
    USERNAME: "test@example.com",
    PASSWORD: "superCroc2020",
    FIRSTNAME: "John",
    LASTNAME: "Doe",
    EMAIL: "test@example.com",
    ACCESS: null,
    REFRESH: null,
    CROCID: null
  }
});

export default function() {
  group("Public APIs", function() {
    postman[Request]({
      name: "List all public crocodiles",
      id: "07638ebd-740c-4683-8d5f-9236f25e93b1",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/"
    });

    postman[Request]({
      name: "Get a single public crocodile",
      id: "fa144d18-2338-4add-9a50-066c58512cea",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/1/"
    });
  });

  group("Registration and authentication", function() {
    postman[Request]({
      name: "Register a new user",
      id: "55c03729-76c2-489f-8185-7bf043583c65",
      method: "POST",
      address: "{{BASE_URL}}/user/register/",
      data:
        '{\n    "username": "{{USERNAME}}",\n    "first_name": "{{FIRSTNAME}}",\n    "last_name": "{{LASTNAME}}",\n    "email": "{{EMAIL}}",\n    "password": "{{PASSWORD}}"\n}'
    });

    postman[Request]({
      name: "Bearer/JWT token authentication",
      id: "247dcc0c-8b48-4bef-933f-ae549874b745",
      method: "POST",
      address: "{{BASE_URL}}/auth/token/login/",
      data:
        '{\n    "username": "{{USERNAME}}",\n    "password": "{{PASSWORD}}"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        pm.environment.set("REFRESH", jsonData.refresh);
        pm.environment.set("ACCESS", jsonData.access);
      }
    });
  });

  group("Private APIs", function() {
    postman[Request]({
      name: "List all your crocodiles",
      id: "ff07ecec-4615-4800-914b-e34062e839e6",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/",
      pre() {
        const baseUrl = pm.collectionVariables.get("BASE_URL");

        const getTokenRequest = {
          url: baseUrl + "/auth/token/login/",
          method: "POST",
          header: "Content-Type:application/json",
          body: {
            mode: "application/json",
            raw: JSON.stringify({
              username: "{{USERNAME}}",
              password: "{{PASSWORD}}"
            })
          }
        };

        pm.sendRequest(getTokenRequest, function(err, res) {
          if (err === null) {
            var jsonData = res.json();
            pm.environment.set("REFRESH", jsonData.refresh);
            pm.environment.set("ACCESS", jsonData.access);
          }
        });
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData[0].hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData[0].id);
        }
      }
    });

    postman[Request]({
      name: "Get a single crocodile",
      id: "01b4c997-fb22-4baa-8f9e-e022e5334828",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}",
      auth(config, Var) {
        const address = new URI(config.address);
        address.username(`${pm[Var]("USERNAME")}`);
        address.password(`${pm[Var]("PASSWORD")}`);
        config.address = address.toString();
        config.options.auth = "basic";
      }
    });

    postman[Request]({
      name: "Create a new crocodile (max 100)",
      id: "93330e45-e658-40f5-addb-667626eca112",
      method: "POST",
      address: "{{BASE_URL}}/my/crocodiles/",
      data:
        '{\n\t"name": "Crocodile1",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update your crocodile",
      id: "8e622f5e-0c1d-4c51-8f6e-95d155ac74e1",
      method: "PUT",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data:
        '{\n\t"name": "Croc",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update selected fields on your crocodile",
      id: "1d338a79-60f7-40dd-a90f-576430f3924b",
      method: "PATCH",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data: '{\n\t"date_of_birth": "2019-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Remove your crocodile",
      id: "3d1a11e5-b520-4a10-b182-bfa661edf932",
      method: "DELETE",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });
  });
}
